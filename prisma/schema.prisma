// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider = "prisma-client-js"
}
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// User 모델 (ERD의 users 테이블)
model User {
  userId        BigInt    @id @default(autoincrement()) @map("user_id")
  nickname      String    @unique
  email         String    @unique
  password      String
  birthDate     DateTime  @map("birth_date") @db.Date
  profilePhoto  String?   @map("profile_photo")
  gender        Gender?
  authority     Authority @default(USER)

  // 관계
  favoriteItems UserFavoriteItem[] @relation("UserFavoriteItems")
  reviews       ItemReview[]
  checklists    Checklist[]

  @@map("users")
}

// Gender enum (ERD에 따라)
enum Gender {
  MALE
  FEMALE
  OTHER
}

// Authority enum (ERD에 따라)
enum Authority {
  USER
  ADMIN
}

// UserFavoriteItem 모델 (ERD의 user_favorite_item_r 테이블)
model UserFavoriteItem {
  id          BigInt   @id @default(autoincrement())
  userId      BigInt   @map("user_id")
  reviewId    BigInt   @map("review_id")
  favoritedAt DateTime @map("favorited_at") @db.Date
  deletedAt   DateTime? @map("deleted_at") @db.Date

  user        User     @relation("UserFavoriteItems", fields: [userId], references: [userId])
  review      ItemReview @relation(fields: [reviewId], references: [reviewId])

  @@map("user_favorite_item_r")
}

// ItemReview 모델 (ERD의 item_reviews 테이블)
model ItemReview {
  reviewId    BigInt   @id @default(autoincrement()) @map("review_id")
  userId      BigInt   @map("user_id")
  title       String
  content     String   @db.Text
  image       String?
  likes       BigInt
  createdAt   DateTime @map("created_at") @db.Date
  itemId      BigInt   @map("item_id")
  deletedAt   DateTime? @map("deleted_at") @db.Date

  user        User     @relation(fields: [userId], references: [userId])
  item        Item     @relation(fields: [itemId], references: [itemId])
  userFavoriteItems UserFavoriteItem[]

  @@map("item_reviews")
}

// Item 모델 (ERD의 items 테이블)
model Item {
  itemId      BigInt   @id @default(autoincrement()) @map("item_id")
  categoryId  BigInt   @map("category_id")
  itemLabel   String   @map("item_label")

  category    ItemCategory @relation(fields: [categoryId], references: [categoryId])
  reviews     ItemReview[]
  conditions  ItemCondition[]
  checklistItems ChecklistItem[]

  @@map("items")
}

// ItemCategory 모델 (ERD의 item_category 테이블)
model ItemCategory {
  categoryId   BigInt   @id @default(autoincrement()) @map("category_id")
  categoryLabel String   @map("category_label")

  items       Item[]

  @@map("item_category")
}

// ItemCondition 모델 (ERD의 item_conditions 테이블)
model ItemCondition {
  id            BigInt   @id @default(autoincrement())
  itemId        BigInt   @map("item_id")
  conditionKey  ConditionKey @map("condition_key")
  conditionValue String   @map("condition_value")

  item          Item     @relation(fields: [itemId], references: [itemId])

  @@map("item_conditions")
}

// ConditionKey enum
enum ConditionKey {
  NEW
  USED
  DAMAGED
}

// Checklist 모델 (ERD의 checklists 테이블)
model Checklist {
  checklistId   BigInt    @id @default(autoincrement()) @map("checklist_id")
  userId        BigInt    @map("user_id")
  title         String
  travelType    TravelType @map("travel_type")
  transportation Transportation @map("transportation")
  withPet       Boolean   @map("with_pet")
  withBaby      Boolean   @map("with_baby")
  withElderly   Boolean   @map("with_elderly")
  visitJapan    Boolean   @map("visit_japan")
  cityId        BigInt?   @map("city_id")
  travelStart   DateTime  @map("travel_start") @db.Date
  travelEnd     DateTime  @map("travel_end") @db.Date
  createdAt     DateTime  @map("created_at") @db.DateTime
  isShared      Boolean   @map("is_shared")
  content       String    @db.Text
  likes         BigInt

  user          User      @relation(fields: [userId], references: [userId])
  city          City?     @relation(fields: [cityId], references: [cityId])
  checklistItems ChecklistItem[]

  @@map("checklists")
}

// TravelType enum
enum TravelType {
  BUSINESS
  LEISURE
  ADVENTURE
}

// Transportation enum
enum Transportation {
  CAR
  PLANE
  TRAIN
  BUS
}

// City 모델 (ERD의 cities 테이블)
model City {
  cityId    BigInt   @id @default(autoincrement()) @map("city_id")
  cityName  String   @map("city_name")

  checklists Checklist[]

  @@map("cities")
}

// TravelTip 모델 (ERD의 travel_tips 테이블)
model TravelTip {
  id        BigInt   @id @default(autoincrement())
  title     String
  content   String   @db.Text
  category  String

  @@map("travel_tips")
}

// ChecklistItem 모델 (ERD의 checklist_items 테이블)
model ChecklistItem {
  id          BigInt   @id @default(autoincrement())
  checklistId BigInt   @map("checklist_id")
  itemId      BigInt   @map("item_id")
  addedByUser Boolean  @map("added_by_user")
  removedByUser Boolean @map("removed_by_user")

  checklist   Checklist @relation(fields: [checklistId], references: [checklistId])
  item        Item     @relation(fields: [itemId], references: [itemId])

  @@map("checklist_items")
}